---
apiVersion: machineconfiguration.openshift.io/v1
kind: MachineConfig
metadata:
  labels:
    machineconfiguration.openshift.io/role: master
  name: 04-accelerated-container-startup-master
spec:
  config:
    ignition:
      version: 3.2.0
    storage:
      files:
      - contents:
          source: data:text/plain;charset=utf-8;base64,IyEvYmluL2Jhc2gKIwojIFRlbXBvcmFyaWx5IHJlc2V0IHRoZSBjb3JlIHN5c3RlbSBwcm9jZXNzZXMncyBDUFUgYWZmaW5pdHkgdG8gYmUgdW5yZXN0cmljdGVkIHRvIGFjY2VsZXJhdGUgc3RhcnR1cCBhbmQgc2h1dGRvd24KIwojIFRoZSBkZWZhdWx0cyBiZWxvdyBjYW4gYmUgb3ZlcnJpZGRlbiB2aWEgZW52aXJvbm1lbnQgdmFyaWFibGVzCiMKCiMgVGhlIGRlZmF1bHQgc2V0IG9mIGNyaXRpY2FsIHByb2Nlc3NlcyB3aG9zZSBhZmZpbml0eSBzaG91bGQgYmUgdGVtcG9yYXJpbHkgdW5ib3VuZDoKQ1JJVElDQUxfUFJPQ0VTU0VTPSR7Q1JJVElDQUxfUFJPQ0VTU0VTOi0ic3lzdGVtZCBvdnMgY3JpbyBrdWJlbGV0IE5ldHdvcmtNYW5hZ2VyIGNvbm1vbiBkYnVzIn0KCiMgRGVmYXVsdCB3YWl0IHRpbWUgaXMgNjAwcyA9IDEwbToKTUFYSU1VTV9XQUlUX1RJTUU9JHtNQVhJTVVNX1dBSVRfVElNRTotNjAwfQoKIyBEZWZhdWx0IHN0ZWFkeS1zdGF0ZSB0aHJlc2hvbGQgPSAyJQojIEFsbG93ZWQgdmFsdWVzOgojICA0ICAtIGFic29sdXRlIHBvZCBjb3VudCAoKy8tKQojICA0JSAtIHBlcmNlbnQgY2hhbmdlICgrLy0pCiMgIC0xIC0gZGlzYWJsZSB0aGUgc3RlYWR5LXN0YXRlIGNoZWNrClNURUFEWV9TVEFURV9USFJFU0hPTEQ9JHtTVEVBRFlfU1RBVEVfVEhSRVNIT0xEOi0yJX0KCiMgRGVmYXVsdCBzdGVhZHktc3RhdGUgd2luZG93ID0gNjBzCiMgSWYgdGhlIHJ1bm5pbmcgcG9kIGNvdW50IHN0YXlzIHdpdGhpbiB0aGUgZ2l2ZW4gdGhyZXNob2xkIGZvciB0aGlzIHRpbWUKIyBwZXJpb2QsIHJldHVybiBDUFUgdXRpbGl6YXRpb24gdG8gbm9ybWFsIGJlZm9yZSB0aGUgbWF4aW11bSB3YWl0IHRpbWUgaGFzCiMgZXhwaXJlcwpTVEVBRFlfU1RBVEVfV0lORE9XPSR7U1RFQURZX1NUQVRFX1dJTkRPVzotNjB9CgojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCgp1bnJlc3RyaWN0ZWRDcHVzZXQoKSB7CiAgaWYgW1sgISAtZSAvdmFyL2xpYi9rdWJlbGV0L2NwdV9tYW5hZ2VyX3N0YXRlIF1dOyB0aGVuCiAgICAjIHVzZSBhbGwgdGhlIGNwdXMgaWYga3ViZWxldCBpcyBub3QgY29uZmlndXJlZCB5ZXQKICAgIGNhdCAvc3lzL2ZzL2Nncm91cC9jcHVzZXQvY3B1c2V0LmNwdXMKICBlbHNlCiAgICBqcSAtciAnLmRlZmF1bHRDcHVTZXQnIDwvdmFyL2xpYi9rdWJlbGV0L2NwdV9tYW5hZ2VyX3N0YXRlCiAgZmkKfQoKcmVzdHJpY3RlZENwdXNldCgpIHsKICBmb3IgYXJnIGluICQoPC9wcm9jL2NtZGxpbmUpOyBkbwogICAgaWYgW1sgJGFyZyA9fiBec3lzdGVtZC5jcHVfYWZmaW5pdHk9IF1dOyB0aGVuCiAgICAgIGVjaG8gJHthcmcjKj19CiAgICAgIHJldHVybiAwCiAgICBmaQogIGRvbmUKICByZXR1cm4gMQp9CgpyZXNldEFmZmluaXR5KCkgewogIGxvY2FsIGNwdXNldD0iJDEiCiAgbG9jYWwgZmFpbGNvdW50PTAKICBsb2NhbCBzdWNjZXNzY291bnQ9MAogIGxvZ2dlciAiUmVjb3Zlcnk6IFNldHRpbmcgQ1BVIGFmZmluaXR5IGZvciBjcml0aWNhbCBwcm9jZXNzZXMgXCIkQ1JJVElDQUxfUFJPQ0VTU0VTXCIgdG8gJGNwdXNldCIKICBmb3IgcHJvYyBpbiAkQ1JJVElDQUxfUFJPQ0VTU0VTOyBkbwogICAgbG9jYWwgcGlkcz0iJChwZ3JlcCAkcHJvYykiCiAgICBmb3IgcGlkIGluICRwaWRzOyBkbwogICAgICBsb2NhbCB0YXNrc2V0T3V0cHV0CiAgICAgIHRhc2tzZXRPdXRwdXQ9IiQodGFza3NldCAtYXBjICIkY3B1c2V0IiAkcGlkIDI+JjEpIgogICAgICBpZiBbWyAkPyAtbmUgMCBdXTsgdGhlbgogICAgICAgIGVjaG8gIkVSUk9SOiAkdGFza3NldE91dHB1dCIKICAgICAgICAoKGZhaWxjb3VudCsrKSkKICAgICAgZWxzZQogICAgICAgICgoc3VjY2Vzc2NvdW50KyspKQogICAgICBmaQogICAgZG9uZQogIGRvbmUKICBsb2dnZXIgIlJlY292ZXJ5OiBSZS1hZmZpbmVkICRzdWNjZXNzY291bnQgcGlkcyBzdWNjZXNzZnVsbHkiCiAgaWYgW1sgJGZhaWxjb3VudCAtZ3QgMCBdXTsgdGhlbgogICAgbG9nZ2VyICJSZWNvdmVyeTogRmFpbGVkIHRvIHJlLWFmZmluZSAkZmFpbGNvdW50IHByb2Nlc3NlcyIKICAgIHJldHVybiAxCiAgZmkKfQoKc2V0VW5yZXN0cmljdGVkKCkgewogIGxvZ2dlciAiUmVjb3Zlcnk6IFNldHRpbmcgY3JpdGljYWwgc3lzdGVtIHByb2Nlc3NlcyB0byBoYXZlIHVucmVzdHJpY3RlZCBDUFUgYWNjZXNzIgogIHJlc2V0QWZmaW5pdHkgIiQodW5yZXN0cmljdGVkQ3B1c2V0KSIKfQoKc2V0UmVzdHJpY3RlZCgpIHsKICBsb2dnZXIgIlJlY292ZXJ5OiBSZXNldHRpbmcgY3JpdGljYWwgc3lzdGVtIHByb2Nlc3NlcyBiYWNrIHRvIG5vcm1hbGx5IHJlc3RyaWN0ZWQgYWNjZXNzIgogIHJlc2V0QWZmaW5pdHkgIiQocmVzdHJpY3RlZENwdXNldCkiCn0KCmN1cnJlbnRBZmZpbml0eSgpIHsKICBsb2NhbCBwaWQ9IiQxIgogIHRhc2tzZXQgLXBjICRwaWQgfCBhd2sgLUYnOiAnICd7cHJpbnQgJDJ9Jwp9Cgp3aXRoaW4oKSB7CiAgbG9jYWwgbGFzdD0kMSBjdXJyZW50PSQyIHRocmVzaG9sZD0kMwogIGxvY2FsIGRlbHRhPTAgcGNoYW5nZQogIGRlbHRhPSQoKCBjdXJyZW50IC0gbGFzdCApKQogIGlmIFtbICRjdXJyZW50IC1lcSAkbGFzdCBdXTsgdGhlbgogICAgcGNoYW5nZT0wCiAgZWxpZiBbWyAkbGFzdCAtZXEgMCBdXTsgdGhlbgogICAgcGNoYW5nZT0xMDAwMDAwCiAgZWxzZQogICAgcGNoYW5nZT0kKCggKCAkZGVsdGEgKiAxMDApIC8gbGFzdCApKQogIGZpCiAgZWNobyAibGFzdDokbGFzdCBjdXJyZW50OiRjdXJyZW50IGRlbHRhOiRkZWx0YSBwY2hhbmdlOiR7cGNoYW5nZX0lIgogIGxvY2FsIGFic29sdXRlIGxpbWl0CiAgY2FzZSAkdGhyZXNob2xkIGluCiAgICAqJSkKICAgICAgYWJzb2x1dGU9JHtwY2hhbmdlIyMtfSAjIGFic29sdXRlIHZhbHVlCiAgICAgIGxpbWl0PSR7dGhyZXNob2xkJSUlfQogICAgICA7OwogICAgKikKICAgICAgYWJzb2x1dGU9JHtkZWx0YSMjLX0gIyBhYnNvbHV0ZSB2YWx1ZQogICAgICBsaW1pdD0kdGhyZXNob2xkCiAgICAgIDs7CiAgZXNhYwogIGlmIFtbICRhYnNvbHV0ZSAtbHQgJGxpbWl0IF1dOyB0aGVuCiAgICBlY2hvICJXaXRoaW4gKCsvLSkkdGhyZXNob2xkIgogICAgcmV0dXJuIDAKICBlbHNlCiAgICBlY2hvICJPdXRzaWRlICgrLy0pJHRocmVzaG9sZCIKICAgIHJldHVybiAxCiAgZmkKfQoKd2FpdEZvclJlYWR5KCkgewogIGxvZ2dlciAiUmVjb3Zlcnk6IFdhaXRpbmcgJHtNQVhJTVVNX1dBSVRfVElNRX1zIGZvciB0aGUgaW5pdGlhbGl6YXRpb24gdG8gY29tcGxldGUiCiAgbG9jYWwgbGFzdFN5c3RlbWRDcHVzZXQ9IiQoY3VycmVudEFmZmluaXR5IDEpIgogIGxvY2FsIGxhc3REZXNpcmVkQ3B1c2V0PSIkKHVucmVzdHJpY3RlZENwdXNldCkiCiAgbG9jYWwgdD0wIHM9MTAKICBsb2NhbCBsYXN0Q2NvdW50PTAgY2NvdW50PTAgc3RlYWR5U3RhdGVUaW1lPTAKICB3aGlsZSBbWyAkdCAtbHQgJE1BWElNVU1fV0FJVF9USU1FIF1dOyBkbwogICAgc2xlZXAgJHMKICAgICgodCArPSBzKSkKICAgICMgUmUtY2hlY2sgdGhlIGN1cnJlbnQgYWZmaW5pdHkgb2Ygc3lzdGVtZCwgaW4gY2FzZSBzb21lIG90aGVyIHByb2Nlc3MgaGFzIGNoYW5nZWQgaXQKICAgIGxvY2FsIHN5c3RlbWRDcHVzZXQ9IiQoY3VycmVudEFmZmluaXR5IDEpIgogICAgIyBSZS1jaGVjayB0aGUgdW5yZXN0cmljdGVkIENwdXNldCwgYXMgdGhlIGFsbG93ZWQgc2V0IG9mIHVucmVzZXJ2ZWQgY29yZXMgbWF5IGNoYW5nZSBhcyBwb2RzIGFyZSBhc3NpZ25lZCB0byBjb3JlcwogICAgbG9jYWwgZGVzaXJlZENwdXNldD0iJCh1bnJlc3RyaWN0ZWRDcHVzZXQpIgogICAgaWYgW1sgJHN5c3RlbWRDcHVzZXQgIT0gJGxhc3RTeXN0ZW1kQ3B1c2V0IHx8ICRsYXN0RGVzaXJlZENwdXNldCAhPSAkZGVzaXJlZENwdXNldCBdXTsgdGhlbgogICAgICByZXNldEFmZmluaXR5ICIkZGVzaXJlZENwdXNldCIKICAgICAgbGFzdFN5c3RlbWRDcHVzZXQ9IiQoY3VycmVudEFmZmluaXR5IDEpIgogICAgICBsYXN0RGVzaXJlZENwdXNldD0iJGRlc2lyZWRDcHVzZXQiCiAgICBmaQoKICAgICMgRGV0ZWN0IHN0ZWFkeS1zdGF0ZSBwb2QgY291bnQKICAgIGNjb3VudD0kKGNyaWN0bCBwcyB8IHdjIC1sKQogICAgaWYgd2l0aGluICRsYXN0Q2NvdW50ICRjY291bnQgJFNURUFEWV9TVEFURV9USFJFU0hPTEQ7IHRoZW4KICAgICAgKChzdGVhZHlTdGF0ZVRpbWUgKz0gcykpCiAgICAgIGVjaG8gIlN0ZWFkeS1zdGF0ZSBmb3IgJHtzdGVhZHlTdGF0ZVRpbWV9cyIKICAgICAgaWYgW1sgJHN0ZWFkeVN0YXRlVGltZSAtZ2UgJFNURUFEWV9TVEFURV9XSU5ET1cgXV07IHRoZW4KICAgICAgICBlY2hvICJTdGVhZHktc3RhdGUgKCsvLSAkU1RFQURZX1NUQVRFX1RIUkVTSE9MRCkgZm9yICR7U1RFQURZX1NUQVRFX1dJTkRPV31zOiBEb25lIgogICAgICAgIGxvZ2dlciAiUmVjb3Zlcnk6IFN0ZWFkeS1zdGF0ZSAoKy8tICRTVEVBRFlfU1RBVEVfVEhSRVNIT0xEKSBmb3IgJHtTVEVBRFlfU1RBVEVfV0lORE9XfXM6IHdvdWxkIHRlcm1pbmF0ZSIKCXJldHVybiAwCiAgICAgIGZpCiAgICBlbHNlCiAgICAgIGlmIFtbICRzdGVhZHlTdGF0ZVRpbWUgLWd0IDAgXV07IHRoZW4KICAgICAgICBlY2hvICJSZXNldHRpbmcgc3RlYWR5LXN0YXRlIHRpbWVyIgogICAgICBmaQogICAgICBzdGVhZHlTdGF0ZVRpbWU9MAogICAgZmkKICAgIGxhc3RDY291bnQ9JGNjb3VudAogIGRvbmUKICBsb2dnZXIgIlJlY292ZXJ5OiBSZWNvdmVyeSBDb21wbGV0ZSBUaW1lb3V0Igp9CgppZiAhIHVucmVzdHJpY3RlZENwdXNldCA+Ji9kZXYvbnVsbDsgdGhlbgogIGxvZ2dlciAiUmVjb3Zlcnk6IE5vIHVucmVzdHJpY3RlZCBDcHVzZXQgY291bGQgYmUgZGV0ZWN0ZWQiCiAgZXhpdCAxCmZpCgppZiAhIHJlc3RyaWN0ZWRDcHVzZXQgPiYvZGV2L251bGw7IHRoZW4KICBsb2dnZXIgIlJlY292ZXJ5OiBObyByZXN0cmljdGVkIENwdXNldCBoYXMgYmVlbiBjb25maWd1cmVkLiAgV2UgYXJlIGFscmVhZHkgcnVubmluZyB1bnJlc3RyaWN0ZWQuIgogIGV4aXQgMApmaQoKIyBFbnN1cmUgd2UgcmVzZXQgdGhlIENQVSBhZmZpbml0eSB3aGVuIHdlIGV4aXQgdGhpcyBzY3JpcHQgZm9yIGFueSByZWFzb24KIyBUaGlzIHdheSBlaXRoZXIgYWZ0ZXIgdGhlIHRpbWVyIGV4cGlyZXMgb3IgYWZ0ZXIgdGhlIHByb2Nlc3MgaXMgaW50ZXJydXB0ZWQKIyB2aWEgXkMgb3IgU0lHVEVSTSwgd2UgcmV0dXJuIHRoaW5ncyBiYWNrIHRvIHRoZSB3YXkgdGhleSBzaG91bGQgYmUuCnRyYXAgc2V0UmVzdHJpY3RlZCBFWElUCgpsb2dnZXIgIlJlY292ZXJ5OiBSZWNvdmVyeSBNb2RlIFN0YXJ0aW5nIgpzZXRVbnJlc3RyaWN0ZWQKd2FpdEZvclJlYWR5Cg==
        mode: 493
        path: /usr/local/bin/accelerated-container-startup.sh
    systemd:
      units:
      - contents: |
          [Unit]
          Description=Unlocks more CPUs for critical system processes during container startup

          [Service]
          Type=simple
          ExecStart=/usr/local/bin/accelerated-container-startup.sh

          # Maximum wait time is 600s = 10m:
          Environment=MAXIMUM_WAIT_TIME=600

          # Steady-state threshold = 2%
          # Allowed values:
          #  4  - absolute pod count (+/-)
          #  4% - percent change (+/-)
          #  -1 - disable the steady-state check
          Environment=STEADY_STATE_THRESHOLD=2%%

          # Steady-state window = 60s
          # If the running pod count stays within the given threshold for this time
          # period, return CPU utilization to normal before the maximum wait time has
          # expires
          Environment=STEADY_STATE_WINDOW=60

          [Install]
          WantedBy=multi-user.target
        enabled: true
        name: accelerated-container-startup.service
      - contents: |
          [Unit]
          Description=Unlocks more CPUs for critical system processes during container shutdown
          DefaultDependencies=no

          [Service]
          Type=simple
          ExecStart=/usr/local/bin/accelerated-container-startup.sh

          # Maximum wait time is 600s = 10m:
          Environment=MAXIMUM_WAIT_TIME=600

          # Steady-state threshold
          # Allowed values:
          #  4  - absolute pod count (+/-)
          #  4% - percent change (+/-)
          #  -1 - disable the steady-state check
          Environment=STEADY_STATE_THRESHOLD=-1

          # Steady-state window = 60s
          # If the running pod count stays within the given threshold for this time
          # period, return CPU utilization to normal before the maximum wait time has
          # expires
          Environment=STEADY_STATE_WINDOW=60

          [Install]
          WantedBy=shutdown.target reboot.target halt.target
        enabled: true
        name: accelerated-container-shutdown.service
---
apiVersion: machineconfiguration.openshift.io/v1
kind: MachineConfig
metadata:
  labels:
    machineconfiguration.openshift.io/role: worker
  name: 04-accelerated-container-startup-worker
spec:
  config:
    ignition:
      version: 3.2.0
    storage:
      files:
      - contents:
          source: data:text/plain;charset=utf-8;base64,IyEvYmluL2Jhc2gKIwojIFRlbXBvcmFyaWx5IHJlc2V0IHRoZSBjb3JlIHN5c3RlbSBwcm9jZXNzZXMncyBDUFUgYWZmaW5pdHkgdG8gYmUgdW5yZXN0cmljdGVkIHRvIGFjY2VsZXJhdGUgc3RhcnR1cCBhbmQgc2h1dGRvd24KIwojIFRoZSBkZWZhdWx0cyBiZWxvdyBjYW4gYmUgb3ZlcnJpZGRlbiB2aWEgZW52aXJvbm1lbnQgdmFyaWFibGVzCiMKCiMgVGhlIGRlZmF1bHQgc2V0IG9mIGNyaXRpY2FsIHByb2Nlc3NlcyB3aG9zZSBhZmZpbml0eSBzaG91bGQgYmUgdGVtcG9yYXJpbHkgdW5ib3VuZDoKQ1JJVElDQUxfUFJPQ0VTU0VTPSR7Q1JJVElDQUxfUFJPQ0VTU0VTOi0ic3lzdGVtZCBvdnMgY3JpbyBrdWJlbGV0IE5ldHdvcmtNYW5hZ2VyIGNvbm1vbiBkYnVzIn0KCiMgRGVmYXVsdCB3YWl0IHRpbWUgaXMgNjAwcyA9IDEwbToKTUFYSU1VTV9XQUlUX1RJTUU9JHtNQVhJTVVNX1dBSVRfVElNRTotNjAwfQoKIyBEZWZhdWx0IHN0ZWFkeS1zdGF0ZSB0aHJlc2hvbGQgPSAyJQojIEFsbG93ZWQgdmFsdWVzOgojICA0ICAtIGFic29sdXRlIHBvZCBjb3VudCAoKy8tKQojICA0JSAtIHBlcmNlbnQgY2hhbmdlICgrLy0pCiMgIC0xIC0gZGlzYWJsZSB0aGUgc3RlYWR5LXN0YXRlIGNoZWNrClNURUFEWV9TVEFURV9USFJFU0hPTEQ9JHtTVEVBRFlfU1RBVEVfVEhSRVNIT0xEOi0yJX0KCiMgRGVmYXVsdCBzdGVhZHktc3RhdGUgd2luZG93ID0gNjBzCiMgSWYgdGhlIHJ1bm5pbmcgcG9kIGNvdW50IHN0YXlzIHdpdGhpbiB0aGUgZ2l2ZW4gdGhyZXNob2xkIGZvciB0aGlzIHRpbWUKIyBwZXJpb2QsIHJldHVybiBDUFUgdXRpbGl6YXRpb24gdG8gbm9ybWFsIGJlZm9yZSB0aGUgbWF4aW11bSB3YWl0IHRpbWUgaGFzCiMgZXhwaXJlcwpTVEVBRFlfU1RBVEVfV0lORE9XPSR7U1RFQURZX1NUQVRFX1dJTkRPVzotNjB9CgojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCgp1bnJlc3RyaWN0ZWRDcHVzZXQoKSB7CiAgaWYgW1sgISAtZSAvdmFyL2xpYi9rdWJlbGV0L2NwdV9tYW5hZ2VyX3N0YXRlIF1dOyB0aGVuCiAgICAjIHVzZSBhbGwgdGhlIGNwdXMgaWYga3ViZWxldCBpcyBub3QgY29uZmlndXJlZCB5ZXQKICAgIGNhdCAvc3lzL2ZzL2Nncm91cC9jcHVzZXQvY3B1c2V0LmNwdXMKICBlbHNlCiAgICBqcSAtciAnLmRlZmF1bHRDcHVTZXQnIDwvdmFyL2xpYi9rdWJlbGV0L2NwdV9tYW5hZ2VyX3N0YXRlCiAgZmkKfQoKcmVzdHJpY3RlZENwdXNldCgpIHsKICBmb3IgYXJnIGluICQoPC9wcm9jL2NtZGxpbmUpOyBkbwogICAgaWYgW1sgJGFyZyA9fiBec3lzdGVtZC5jcHVfYWZmaW5pdHk9IF1dOyB0aGVuCiAgICAgIGVjaG8gJHthcmcjKj19CiAgICAgIHJldHVybiAwCiAgICBmaQogIGRvbmUKICByZXR1cm4gMQp9CgpyZXNldEFmZmluaXR5KCkgewogIGxvY2FsIGNwdXNldD0iJDEiCiAgbG9jYWwgZmFpbGNvdW50PTAKICBsb2NhbCBzdWNjZXNzY291bnQ9MAogIGxvZ2dlciAiUmVjb3Zlcnk6IFNldHRpbmcgQ1BVIGFmZmluaXR5IGZvciBjcml0aWNhbCBwcm9jZXNzZXMgXCIkQ1JJVElDQUxfUFJPQ0VTU0VTXCIgdG8gJGNwdXNldCIKICBmb3IgcHJvYyBpbiAkQ1JJVElDQUxfUFJPQ0VTU0VTOyBkbwogICAgbG9jYWwgcGlkcz0iJChwZ3JlcCAkcHJvYykiCiAgICBmb3IgcGlkIGluICRwaWRzOyBkbwogICAgICBsb2NhbCB0YXNrc2V0T3V0cHV0CiAgICAgIHRhc2tzZXRPdXRwdXQ9IiQodGFza3NldCAtYXBjICIkY3B1c2V0IiAkcGlkIDI+JjEpIgogICAgICBpZiBbWyAkPyAtbmUgMCBdXTsgdGhlbgogICAgICAgIGVjaG8gIkVSUk9SOiAkdGFza3NldE91dHB1dCIKICAgICAgICAoKGZhaWxjb3VudCsrKSkKICAgICAgZWxzZQogICAgICAgICgoc3VjY2Vzc2NvdW50KyspKQogICAgICBmaQogICAgZG9uZQogIGRvbmUKICBsb2dnZXIgIlJlY292ZXJ5OiBSZS1hZmZpbmVkICRzdWNjZXNzY291bnQgcGlkcyBzdWNjZXNzZnVsbHkiCiAgaWYgW1sgJGZhaWxjb3VudCAtZ3QgMCBdXTsgdGhlbgogICAgbG9nZ2VyICJSZWNvdmVyeTogRmFpbGVkIHRvIHJlLWFmZmluZSAkZmFpbGNvdW50IHByb2Nlc3NlcyIKICAgIHJldHVybiAxCiAgZmkKfQoKc2V0VW5yZXN0cmljdGVkKCkgewogIGxvZ2dlciAiUmVjb3Zlcnk6IFNldHRpbmcgY3JpdGljYWwgc3lzdGVtIHByb2Nlc3NlcyB0byBoYXZlIHVucmVzdHJpY3RlZCBDUFUgYWNjZXNzIgogIHJlc2V0QWZmaW5pdHkgIiQodW5yZXN0cmljdGVkQ3B1c2V0KSIKfQoKc2V0UmVzdHJpY3RlZCgpIHsKICBsb2dnZXIgIlJlY292ZXJ5OiBSZXNldHRpbmcgY3JpdGljYWwgc3lzdGVtIHByb2Nlc3NlcyBiYWNrIHRvIG5vcm1hbGx5IHJlc3RyaWN0ZWQgYWNjZXNzIgogIHJlc2V0QWZmaW5pdHkgIiQocmVzdHJpY3RlZENwdXNldCkiCn0KCmN1cnJlbnRBZmZpbml0eSgpIHsKICBsb2NhbCBwaWQ9IiQxIgogIHRhc2tzZXQgLXBjICRwaWQgfCBhd2sgLUYnOiAnICd7cHJpbnQgJDJ9Jwp9Cgp3aXRoaW4oKSB7CiAgbG9jYWwgbGFzdD0kMSBjdXJyZW50PSQyIHRocmVzaG9sZD0kMwogIGxvY2FsIGRlbHRhPTAgcGNoYW5nZQogIGRlbHRhPSQoKCBjdXJyZW50IC0gbGFzdCApKQogIGlmIFtbICRjdXJyZW50IC1lcSAkbGFzdCBdXTsgdGhlbgogICAgcGNoYW5nZT0wCiAgZWxpZiBbWyAkbGFzdCAtZXEgMCBdXTsgdGhlbgogICAgcGNoYW5nZT0xMDAwMDAwCiAgZWxzZQogICAgcGNoYW5nZT0kKCggKCAkZGVsdGEgKiAxMDApIC8gbGFzdCApKQogIGZpCiAgZWNobyAibGFzdDokbGFzdCBjdXJyZW50OiRjdXJyZW50IGRlbHRhOiRkZWx0YSBwY2hhbmdlOiR7cGNoYW5nZX0lIgogIGxvY2FsIGFic29sdXRlIGxpbWl0CiAgY2FzZSAkdGhyZXNob2xkIGluCiAgICAqJSkKICAgICAgYWJzb2x1dGU9JHtwY2hhbmdlIyMtfSAjIGFic29sdXRlIHZhbHVlCiAgICAgIGxpbWl0PSR7dGhyZXNob2xkJSUlfQogICAgICA7OwogICAgKikKICAgICAgYWJzb2x1dGU9JHtkZWx0YSMjLX0gIyBhYnNvbHV0ZSB2YWx1ZQogICAgICBsaW1pdD0kdGhyZXNob2xkCiAgICAgIDs7CiAgZXNhYwogIGlmIFtbICRhYnNvbHV0ZSAtbHQgJGxpbWl0IF1dOyB0aGVuCiAgICBlY2hvICJXaXRoaW4gKCsvLSkkdGhyZXNob2xkIgogICAgcmV0dXJuIDAKICBlbHNlCiAgICBlY2hvICJPdXRzaWRlICgrLy0pJHRocmVzaG9sZCIKICAgIHJldHVybiAxCiAgZmkKfQoKd2FpdEZvclJlYWR5KCkgewogIGxvZ2dlciAiUmVjb3Zlcnk6IFdhaXRpbmcgJHtNQVhJTVVNX1dBSVRfVElNRX1zIGZvciB0aGUgaW5pdGlhbGl6YXRpb24gdG8gY29tcGxldGUiCiAgbG9jYWwgbGFzdFN5c3RlbWRDcHVzZXQ9IiQoY3VycmVudEFmZmluaXR5IDEpIgogIGxvY2FsIGxhc3REZXNpcmVkQ3B1c2V0PSIkKHVucmVzdHJpY3RlZENwdXNldCkiCiAgbG9jYWwgdD0wIHM9MTAKICBsb2NhbCBsYXN0Q2NvdW50PTAgY2NvdW50PTAgc3RlYWR5U3RhdGVUaW1lPTAKICB3aGlsZSBbWyAkdCAtbHQgJE1BWElNVU1fV0FJVF9USU1FIF1dOyBkbwogICAgc2xlZXAgJHMKICAgICgodCArPSBzKSkKICAgICMgUmUtY2hlY2sgdGhlIGN1cnJlbnQgYWZmaW5pdHkgb2Ygc3lzdGVtZCwgaW4gY2FzZSBzb21lIG90aGVyIHByb2Nlc3MgaGFzIGNoYW5nZWQgaXQKICAgIGxvY2FsIHN5c3RlbWRDcHVzZXQ9IiQoY3VycmVudEFmZmluaXR5IDEpIgogICAgIyBSZS1jaGVjayB0aGUgdW5yZXN0cmljdGVkIENwdXNldCwgYXMgdGhlIGFsbG93ZWQgc2V0IG9mIHVucmVzZXJ2ZWQgY29yZXMgbWF5IGNoYW5nZSBhcyBwb2RzIGFyZSBhc3NpZ25lZCB0byBjb3JlcwogICAgbG9jYWwgZGVzaXJlZENwdXNldD0iJCh1bnJlc3RyaWN0ZWRDcHVzZXQpIgogICAgaWYgW1sgJHN5c3RlbWRDcHVzZXQgIT0gJGxhc3RTeXN0ZW1kQ3B1c2V0IHx8ICRsYXN0RGVzaXJlZENwdXNldCAhPSAkZGVzaXJlZENwdXNldCBdXTsgdGhlbgogICAgICByZXNldEFmZmluaXR5ICIkZGVzaXJlZENwdXNldCIKICAgICAgbGFzdFN5c3RlbWRDcHVzZXQ9IiQoY3VycmVudEFmZmluaXR5IDEpIgogICAgICBsYXN0RGVzaXJlZENwdXNldD0iJGRlc2lyZWRDcHVzZXQiCiAgICBmaQoKICAgICMgRGV0ZWN0IHN0ZWFkeS1zdGF0ZSBwb2QgY291bnQKICAgIGNjb3VudD0kKGNyaWN0bCBwcyB8IHdjIC1sKQogICAgaWYgd2l0aGluICRsYXN0Q2NvdW50ICRjY291bnQgJFNURUFEWV9TVEFURV9USFJFU0hPTEQ7IHRoZW4KICAgICAgKChzdGVhZHlTdGF0ZVRpbWUgKz0gcykpCiAgICAgIGVjaG8gIlN0ZWFkeS1zdGF0ZSBmb3IgJHtzdGVhZHlTdGF0ZVRpbWV9cyIKICAgICAgaWYgW1sgJHN0ZWFkeVN0YXRlVGltZSAtZ2UgJFNURUFEWV9TVEFURV9XSU5ET1cgXV07IHRoZW4KICAgICAgICBlY2hvICJTdGVhZHktc3RhdGUgKCsvLSAkU1RFQURZX1NUQVRFX1RIUkVTSE9MRCkgZm9yICR7U1RFQURZX1NUQVRFX1dJTkRPV31zOiBEb25lIgogICAgICAgIGxvZ2dlciAiUmVjb3Zlcnk6IFN0ZWFkeS1zdGF0ZSAoKy8tICRTVEVBRFlfU1RBVEVfVEhSRVNIT0xEKSBmb3IgJHtTVEVBRFlfU1RBVEVfV0lORE9XfXM6IHdvdWxkIHRlcm1pbmF0ZSIKCXJldHVybiAwCiAgICAgIGZpCiAgICBlbHNlCiAgICAgIGlmIFtbICRzdGVhZHlTdGF0ZVRpbWUgLWd0IDAgXV07IHRoZW4KICAgICAgICBlY2hvICJSZXNldHRpbmcgc3RlYWR5LXN0YXRlIHRpbWVyIgogICAgICBmaQogICAgICBzdGVhZHlTdGF0ZVRpbWU9MAogICAgZmkKICAgIGxhc3RDY291bnQ9JGNjb3VudAogIGRvbmUKICBsb2dnZXIgIlJlY292ZXJ5OiBSZWNvdmVyeSBDb21wbGV0ZSBUaW1lb3V0Igp9CgppZiAhIHVucmVzdHJpY3RlZENwdXNldCA+Ji9kZXYvbnVsbDsgdGhlbgogIGxvZ2dlciAiUmVjb3Zlcnk6IE5vIHVucmVzdHJpY3RlZCBDcHVzZXQgY291bGQgYmUgZGV0ZWN0ZWQiCiAgZXhpdCAxCmZpCgppZiAhIHJlc3RyaWN0ZWRDcHVzZXQgPiYvZGV2L251bGw7IHRoZW4KICBsb2dnZXIgIlJlY292ZXJ5OiBObyByZXN0cmljdGVkIENwdXNldCBoYXMgYmVlbiBjb25maWd1cmVkLiAgV2UgYXJlIGFscmVhZHkgcnVubmluZyB1bnJlc3RyaWN0ZWQuIgogIGV4aXQgMApmaQoKIyBFbnN1cmUgd2UgcmVzZXQgdGhlIENQVSBhZmZpbml0eSB3aGVuIHdlIGV4aXQgdGhpcyBzY3JpcHQgZm9yIGFueSByZWFzb24KIyBUaGlzIHdheSBlaXRoZXIgYWZ0ZXIgdGhlIHRpbWVyIGV4cGlyZXMgb3IgYWZ0ZXIgdGhlIHByb2Nlc3MgaXMgaW50ZXJydXB0ZWQKIyB2aWEgXkMgb3IgU0lHVEVSTSwgd2UgcmV0dXJuIHRoaW5ncyBiYWNrIHRvIHRoZSB3YXkgdGhleSBzaG91bGQgYmUuCnRyYXAgc2V0UmVzdHJpY3RlZCBFWElUCgpsb2dnZXIgIlJlY292ZXJ5OiBSZWNvdmVyeSBNb2RlIFN0YXJ0aW5nIgpzZXRVbnJlc3RyaWN0ZWQKd2FpdEZvclJlYWR5Cg==
        mode: 493
        path: /usr/local/bin/accelerated-container-startup.sh
    systemd:
      units:
      - contents: |
          [Unit]
          Description=Unlocks more CPUs for critical system processes during container startup

          [Service]
          Type=simple
          ExecStart=/usr/local/bin/accelerated-container-startup.sh

          # Maximum wait time is 600s = 10m:
          Environment=MAXIMUM_WAIT_TIME=600

          # Steady-state threshold = 2%
          # Allowed values:
          #  4  - absolute pod count (+/-)
          #  4% - percent change (+/-)
          #  -1 - disable the steady-state check
          Environment=STEADY_STATE_THRESHOLD=2%%

          # Steady-state window = 60s
          # If the running pod count stays within the given threshold for this time
          # period, return CPU utilization to normal before the maximum wait time has
          # expires
          Environment=STEADY_STATE_WINDOW=60

          [Install]
          WantedBy=multi-user.target
        enabled: true
        name: accelerated-container-startup.service
      - contents: |
          [Unit]
          Description=Unlocks more CPUs for critical system processes during container shutdown
          DefaultDependencies=no

          [Service]
          Type=simple
          ExecStart=/usr/local/bin/accelerated-container-startup.sh

          # Maximum wait time is 600s = 10m:
          Environment=MAXIMUM_WAIT_TIME=600

          # Steady-state threshold
          # Allowed values:
          #  4  - absolute pod count (+/-)
          #  4% - percent change (+/-)
          #  -1 - disable the steady-state check
          Environment=STEADY_STATE_THRESHOLD=-1

          # Steady-state window = 60s
          # If the running pod count stays within the given threshold for this time
          # period, return CPU utilization to normal before the maximum wait time has
          # expires
          Environment=STEADY_STATE_WINDOW=60

          [Install]
          WantedBy=shutdown.target reboot.target halt.target
        enabled: true
        name: accelerated-container-shutdown.service
